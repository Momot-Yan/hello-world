
/*
2.	Удалить все предложения, состоящие из четного количества слов.
int doTask2() (выполнение второго задания) Переменные функции:
Функции передаются массив предложений List и его размер amount. int i, k – переменные индексы.
int old_amount – хранит начальное количество предложений.
Реализация работы функции:
1. С помощью цикла предложения массива рассматриваются по очереди.
1.	Если количество предложений четно, все следующие предложений сдвигаются на один, «вытесняя» данное. Размер amount уменьшается на один.
2.	Изменяется размер выделенной памяти (так как изменяется количество предложений).
3.	Функция возвращает amount.

*/
int func_for_Task2(char** List, int amount)
{
	int old_amount = amount; for (int i = 0; i < amount; i++)
	{
		if (count_words(List[i]) % 2 == 0)
		{
			{ if (i == amount - 1) amount--;
			else
			{
				for (int k = i; k < amount - 1; k++)
				{
					List[k] = List[k + 1];
				} amount--; i--;
			}
			}
		}
	}
	List = (char**)realloc(List, amount * sizeof(char*)); return amount;
}
